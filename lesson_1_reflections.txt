How did viewing a diff between two versions of a file help you see the bug that was introduced?
By highlighting any and all lines which had changed from one version of the file to the other.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
By showing you the ways that your program evolves over time.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
The pros would be that you don't have any un-necessary commits, which will decrease the complexity and size of your project. On the other hand, having commits be automatic might save you from forgetting to manually commit a file.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Saving multiple files in one commit can help track changes across an entire project composed of many files, but may also lead to a larger project. Saving each file separately seems like it would be more efficient and lead to smaller project sizes.

How can you use the commands git log and git diff to view the history of files?
Use git log to view the commit IDs for a project, then use git diff to compare to commit IDs to one another.

How might using version control make you more confident to make changes that could break something?
Because it allows a programmer to work on code which has been "checked out", thereby not altering the current up-to-date codebase. 
